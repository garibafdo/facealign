name: bueno
on:
  push:
    paths:
      - requirements.txt
  schedule:
    - cron: '4 */2 * * *'  # every 2 hours at minute 4

jobs:
  check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: chk
        run: python utils.py

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade kaggle jq
          
      - name: Set up Kaggle CLI and push notebooks
        env:
          KAGGLE_CONFIG_DIR: ${{ github.workspace }}/.kaggle
        run: |
          mkdir -p $KAGGLE_CONFIG_DIR
          cat << EOF > $KAGGLE_CONFIG_DIR/kaggle.json
          ${{ secrets.KAGGLE_JSON }}
          EOF
          chmod 600 $KAGGLE_CONFIG_DIR/kaggle.json
          
          echo "Listing kernels to verify auth..."
          kaggle kernels list --mine
          
          # Define kernels to check
          declare -A kernels
          kernels["kg"]="gadarmukha/auto-run-kernel"
          kernels["kg2"]="gadarmukha/auto-run-kernell"
          
          # Loop over kernels
          for folder in "${!kernels[@]}"; do
            KID="${kernels[$folder]}"
            echo "Checking status of $KID..."
            
            # Try to get kernel status with error handling
            if RAW=$(kaggle kernels status "$KID" --json 2>&1); then
              # Command succeeded - we got a valid response
              STATUS=$(echo "$RAW" | jq -r '.status')
              echo "Current status: $STATUS"
              
              # Only push if kernel has completed
              if [[ "$STATUS" == "KernelWorkerStatus.COMPLETE" ]] || 
                 [[ "$STATUS" == "KernelWorkerStatus.CANCELED" ]] || 
                 [[ "$STATUS" == "KernelWorkerStatus.ERROR" ]]; then
                echo "Kernel has finished. Pushing new version from $folder..."
                if [[ -d "./$folder" ]]; then
                  kaggle kernels push -p "./$folder"
                else
                  echo "Error: Folder ./$folder does not exist"
                fi
              else
                echo "Skipping $KID because it is still active (status: $STATUS)."
              fi
              
            else
              # Command failed - check the error message
              echo "Status command failed. Error output: $RAW"
              
              # Check if this is a 429 error (kernel running)
              if echo "$RAW" | grep -q "429"; then
                echo "Detected 429 error - kernel $KID is likely running. Skipping push."
              elif echo "$RAW" | grep -q "404"; then
                echo "Kernel $KID not found. Creating new kernel..."
                if [[ -d "./$folder" ]]; then
                  kaggle kernels push -p "./$folder"
                else
                  echo "Error: Folder ./$folder does not exist"
                fi
              else
                echo "Unknown error for $KID. Skipping to be safe."
                echo "Full error: $RAW"
              fi
            fi
          done
